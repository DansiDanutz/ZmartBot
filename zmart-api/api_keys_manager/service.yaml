service_name: api-keys-manager-service
service_type: backend
version: 1.0.0
owner: zmartbot
description: "ZmartBot API keys management service providing secure storage, rotation, and access control for all external API credentials"
port: 8006

lifecycle:
  start: "python3 api_keys_manager_server.py --port 8006"
  stop: "pkill -f api_keys_manager_server"
  migrate: null

dependencies:
  services: ["zmart-api"]
  env: ["API_KEYS_MANAGER_TOKEN", "ENCRYPTION_KEY", "DATABASE_URL"]

health:
  liveness_path: "/health"
  readiness_path: "/ready"
  startup_grace_seconds: 30
  timeout_seconds: 45

observability:
  metrics_path: "/metrics"
  logs_format: "jsonl"
  dashboards: ["API Keys Manager Performance", "Security Monitoring"]

security:
  token_required: true
  scopes: ["api_keys", "security", "encryption"]

orchestration:
  basic_integration: true
  master_agent_linked: true
  ordering_hints: ["zmart-api -> api-keys-manager-service"]

performance:
  baseline_ms_p95: 150
  notes: "API keys management service with encryption and secure access control"

failure_modes:
  - name: "encryption-key-failed"
    symptoms: "Cannot encrypt/decrypt API keys, service unavailable"
    remediation: "Check encryption key configuration, restart service, verify key integrity"
  - name: "database-connection-failed"
    symptoms: "Cannot access API keys database, authentication failing"
    remediation: "Check database connectivity, restart service, verify database permissions"
  - name: "key-rotation-failed"
    symptoms: "API key rotation not working, keys becoming stale"
    remediation: "Check rotation schedule, verify API connectivity, restart rotation service"

rollback:
  snapshot_required: true
  playbook: ["isolate", "restore_latest_snapshot", "verify", "reactivate"]

load_balancing:
  enabled: true
  pool: "api_keys_manager_pool"

known_issues: []

changelog:
  - version: "1.0.0"
    date: "2025-08-24"
    notes: "Initial API keys management service with encryption and rotation"
