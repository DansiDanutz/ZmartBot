# my-symbols-extended-service.mdc
> Type: service | Version: 1.0.0 | Owner: zmartbot | Status: ACTIVE | Level: 2 | Port: 8005
## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-09-01 00:11:21
**Primary Source**: my-symbols-extended-service.mdc


## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-31 20:10:54
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# my-symbols-extended-service.mdc
> Type: service | Version: 1.0.0 | Owner: zmartbot | Status: ACTIVE | Level: 2 | Port: 8005
## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-31 14:25:51
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-31 09:30:55
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# my-symbols-extended-service.mdc
> Type: service | Version: 1.0.0 | Owner: zmartbot | Status: ACTIVE | Level: 2 | Port: 8005
## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-31 03:55:38
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-30 15:34:11
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-30 11:32:15
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# my-symbols-extended-service.mdc
> Type: service | Version: 1.0.0 | Owner: zmartbot | Status: ACTIVE | Level: 2 | Port: 8005
## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-30 07:23:02
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-30 11:06:01
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# my-symbols-extended-service.mdc
> Type: service | Version: 1.0.0 | Owner: zmartbot | Status: ACTIVE | Level: 2 | Port: 8005
## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-29 22:55:51
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-29 17:58:21
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-29 11:57:30
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-29 07:28:17
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-27 10:39:58
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# My-Symbols-Extended-Service - Merged MDC Configuration

## 🔗 Merged from 2 duplicate files
**Merged Files**: my-symbols-extended-service.mdc, SymbolsExtendedServer.mdc
**Merge Date**: 2025-08-26 09:03:52
**Primary Source**: my-symbols-extended-service.mdc

## 📋 Primary Configuration
# my-symbols-extended-service.mdc
> Type: backend | Version: 1.0.0 | Owner: zmartbot | Port: 8005

## Overview
ZmartBot extended symbols service providing advanced symbol management, portfolio tracking, and extended market data analysis with comprehensive portfolio analytics and market data processing capabilities.

## Architecture & Integration
- **Service Type:** backend
- **Dependencies:** zmart-api, mysymbols
- **Env Vars:** SYMBOLS_EXTENDED_TOKEN, DATABASE_URL, SYMBOLS_API_KEY
- **Lifecycle:** start=`python3 symbols_extended_server.py --port 8005` | stop=`pkill -f symbols_extended_server` | migrate=`n/a`

## API Endpoints

### GET /health
- Summary: Extended symbols service health check
- Auth Required: No
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{}`
- Responses:
  - 200: Health status
  - 503: Service unavailable

### GET /ready
- Summary: Extended symbols service readiness check
- Auth Required: No
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{}`
- Responses:
  - 200: Ready status
  - 503: Not ready

### GET /api/symbols-extended/status
- Summary: Get extended symbols service status
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{}`
- Responses:
  - 200: Extended symbols status information
  - 401: Authentication required

### GET /api/symbols-extended/symbols
- Summary: Get extended symbol information
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{"category": "string", "status": "string"}`
  - Body: `{}`
- Responses:
  - 200: Extended symbols list
  - 400: Invalid parameters
  - 401: Authentication required

### POST /api/symbols-extended/symbols
- Summary: Add new extended symbol
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{"symbol": "string", "category": "string", "metadata": "object"}`
- Responses:
  - 200: Symbol added successfully
  - 400: Invalid symbol data
  - 401: Authentication required
  - 409: Symbol already exists

### GET /api/symbols-extended/portfolio
- Summary: Get portfolio analytics
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{"timeframe": "string", "metrics": "string"}`
  - Body: `{}`
- Responses:
  - 200: Portfolio analytics data
  - 400: Invalid parameters
  - 401: Authentication required

### POST /api/symbols-extended/portfolio/calculate
- Summary: Calculate portfolio performance
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{"symbols": ["string"], "timeframe": "string", "metrics": ["string"]}`
- Responses:
  - 200: Portfolio calculation results
  - 400: Invalid calculation parameters
  - 401: Authentication required

### GET /api/symbols-extended/analytics
- Summary: Get symbol analytics
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{"symbol": "string", "analysis_type": "string"}`
  - Body: `{}`
- Responses:
  - 200: Symbol analytics data
  - 400: Invalid parameters
  - 401: Authentication required
  - 404: Symbol not found

### POST /api/symbols-extended/analytics/generate
- Summary: Generate new symbol analytics
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{"symbol": "string", "analysis_type": "string", "parameters": "object"}`
- Responses:
  - 200: Analytics generation initiated
  - 400: Invalid parameters
  - 401: Authentication required

### GET /api/symbols-extended/market-data
- Summary: Get extended market data
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{"symbol": "string", "data_type": "string", "timeframe": "string"}`
  - Body: `{}`
- Responses:
  - 200: Extended market data
  - 400: Invalid parameters
  - 401: Authentication required

### POST /api/symbols-extended/sync
- Summary: Synchronize symbol data
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{"symbols": ["string"], "sync_type": "string"}`
- Responses:
  - 200: Synchronization initiated
  - 400: Invalid sync parameters
  - 401: Authentication required

### GET /api/symbols-extended/categories
- Summary: Get symbol categories
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{}`
- Responses:
  - 200: Symbol categories list
  - 401: Authentication required

### POST /api/symbols-extended/categories
- Summary: Create new symbol category
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{}`
  - Body: `{"name": "string", "description": "string", "rules": "object"}`
- Responses:
  - 200: Category created successfully
  - 400: Invalid category data
  - 401: Authentication required

### GET /api/symbols-extended/reports
- Summary: Get symbol reports
- Auth Required: Yes
- Request:
  - Params: `{}`
  - Query: `{"report_type": "string", "date_range": "string"}`
  - Body: `{}`
- Responses:
  - 200: Symbol reports
  - 400: Invalid parameters
  - 401: Authentication required


## Triggers
- **API endpoint requests**
- **Database events**
- **Workflow transitions**

## Health & Readiness
- Liveness: `/health`
- Readiness: `/ready`
- Timeouts: startup_grace=30s, http_timeout=45s

## Observability
- Metrics: `/metrics`
- Logs: format=jsonl
- Dashboards: Symbols Extended Performance, Portfolio Analytics

## Orchestration & Ordering
- Basic Integration: Enabled
- Master Agent Linked: Yes
- Ordering Hints: zmart-api → my-symbols-extended-service, mysymbols → my-symbols-extended-service

## Performance & SLO (Initial)
- Baseline p95 (ms): 250
- Notes: Extended symbols service with portfolio analytics and market data processing

## Failure Modes & Runbooks
- **database-connection-failed** — Symptoms: Cannot connect to symbols database, portfolio data unavailable — Remediation: Check database connectivity, restart symbols extended service
- **symbol-sync-failed** — Symptoms: Symbol synchronization failing, outdated symbol data — Remediation: Check symbol API connectivity, restart service, verify API keys
- **portfolio-calculation-error** — Symptoms: Portfolio calculations incorrect, performance metrics wrong — Remediation: Check calculation algorithms, validate data integrity, restart service

## Rollback
- Snapshot required: Yes
- Playbook: isolate → restore_latest_snapshot → verify → reactivate

## Load Balancing
- Enabled: Yes
- Pool: symbols_extended_pool

## Known Issues
- None recorded

## Changelog
- 1.0.0 (2025-08-24): Initial extended symbols service with portfolio analytics




## Service Connections & Dependencies

### Current Active Connections
- **port-8005** ✅ **ACTIVE** - network connection
- ****** ✅ **ACTIVE** - dependency connection
- **mysymbols** ✅ **ACTIVE** - dependency connection

### Potential Connections
- **PortManagerService** ⏳ **POTENTIAL** - High-potential integration between my-symbols-extended-service and PortManagerService - Strong synergy opportunity (Confidence: 100%)
- **PortManager** ⏳ **POTENTIAL** - High-potential integration between my-symbols-extended-service and PortManager - Strong synergy opportunity (Confidence: 100%)
- **SecurityScanService** ⏳ **POTENTIAL** - High-potential integration between my-symbols-extended-service and SecurityScanService - Strong synergy opportunity (Confidence: 100%)
- **HealthCheckService** ⏳ **POTENTIAL** - High-potential integration between my-symbols-extended-service and HealthCheckService - Strong synergy opportunity (Confidence: 100%)
- **KuCoinService** ⏳ **POTENTIAL** - High-potential integration between my-symbols-extended-service and KuCoinService - Strong synergy opportunity (Confidence: 100%)

### Priority Connections
*Will be populated automatically during Phase 4 if service qualifies for top 10 priority services*

### Connection Summary
- **Current Active**: 3
- **Potential**: 5  
- **Priority**: 0
- **Total Discovered**: 3
- **Last Discovery Scan**: Auto-updated on system initialization
- **Discovery Method**: Multi-phase automated analysis with diamond pattern extraction
- **Update Policy**: Real-time updates during workflow execution
## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**
- ✅ **Master Orchestration integration**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-26T09:03:52.859019

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**
- ✅ **Master Orchestration integration**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-27T10:39:58.305389

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**
- ✅ **Master Orchestration integration**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-29T07:28:17.485490

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**
- ✅ **Master Orchestration integration**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-29T11:57:30.878014

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-29T17:58:21.675297

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-29T22:55:51.643507

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-30T11:06:01.132468

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-30T07:23:02.292469

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-30T11:32:15.290365

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-30T15:34:11.020734

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-31T03:55:38.423600

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-31T09:30:55.360527

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-31T14:25:51.259940

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-08-31T20:10:54.477253

## 📄 Additional Content from SymbolsExtendedServer.mdc
# SymbolsExtendedServer.mdc

## Purpose
Extended symbols management service for ZmartBot trading system - Currently in development/placeholder state.

## Description
Extended symbols management service for ZmartBot trading system - Currently in development/placeh...

## Core Functions
- **Symbol Extension**: Enhanced symbol data and metadata management
- **Symbol Validation**: Extended validation and verification capabilities
- **Symbol Discovery**: Advanced symbol discovery and filtering
- **Symbol Analytics**: Extended analytics and performance tracking

## Service Architecture
- **Service Name**: zmart-symbols-extended
- **Default Port**: 8008 (estimated)
- **Host**: 127.0.0.1
- **Protocol**: HTTP/FastAPI (planned)
- **Version**: 1.0.0 (planned)

## Current Status
⚠️ **DEVELOPMENT STATUS**: Service file exists but implementation is incomplete
- File location: `/zmart-api/symbols_extended/symbols_extended_server.py`
- Implementation: Minimal/placeholder code
- Functionality: Not yet implemented

## Planned API Endpoints
### Health & Monitoring (Planned)
- `GET /health` - Service health check
- `GET /ready` - Service readiness probe
- `GET /metrics` - Service performance metrics

### Extended Symbol Operations (Planned)
- `GET /api/v1/symbols/extended` - Get extended symbol information
- `GET /api/v1/symbols/extended/{symbol}` - Get specific symbol details
- `POST /api/v1/symbols/extended/validate` - Validate symbol configuration
- `GET /api/v1/symbols/extended/analytics` - Extended symbol analytics

## Planned Features
- **Enhanced Metadata**: Extended symbol information beyond basic data
- **Custom Attributes**: User-defined symbol properties and tags
- **Advanced Filtering**: Complex symbol filtering and search capabilities
- **Performance Tracking**: Extended performance metrics per symbol
- **Integration APIs**: Enhanced integration with external data sources

## Dependencies (Planned)
- FastAPI for REST API framework
- uvicorn for ASGI server
- SQLite/PostgreSQL for extended symbol storage
- External market data APIs
- ZmartBot core system integration

## Integration Points (Planned)
- **Core Symbol Service**: Enhanced functionality for basic symbols
- **Analytics Service**: Extended analytics data provision
- **Trading Engine**: Advanced symbol selection criteria
- **Risk Management**: Enhanced risk metrics per symbol
- **Portfolio Manager**: Extended portfolio symbol analysis

## Development Priority
- **Phase 1**: Basic service structure and health endpoints
- **Phase 2**: Extended symbol metadata storage
- **Phase 3**: Advanced filtering and search capabilities
- **Phase 4**: Analytics integration and performance tracking
- **Phase 5**: External data source integration

## Configuration (Planned)
```python
SERVICE_CONFIG = {
    "name": "zmart-symbols-extended",
    "port": 8008,
    "host": "127.0.0.1",
    "version": "1.0.0"
}
```

## Implementation Notes
- Service currently exists as placeholder
- Requires full implementation development
- Should follow ZmartBot service patterns
- Integration with existing symbol database required
- Consider relationship with MySymbols service

## Usage Example (When Implemented)
```bash
# Start Extended Symbols Service
python symbols_extended_server.py --port 8008 --host 127.0.0.1

# Get extended symbol data
curl http://127.0.0.1:8008/api/v1/symbols/extended/BTCUSDT
```

## Security Considerations
- Symbol data validation required
- API authentication implementation needed
- Rate limiting for external API calls
- Data sanitization for custom attributes

## Deployment Requirements (When Ready)
- Python 3.8+
- FastAPI framework
- Database connectivity
- Network access to assigned port
- ZmartBot ecosystem integration

## Action Items
1. Implement basic FastAPI service structure
2. Add health check and metrics endpoints
3. Design extended symbol data schema
4. Implement symbol validation logic
5. Add integration with existing symbol services
6. Develop comprehensive testing suite
7. Add deployment configuration

## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**


## Requirements
- ✅ **Unique port assignment**
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**


---
**Merge Summary**: Combined 2 files into unified MDC configuration
**Generated**: 2025-09-01T00:11:21.324972