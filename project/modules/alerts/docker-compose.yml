version: '3.8'

services:
  # Main Symbol Alerts System
  alerts:
    build: .
    container_name: symbol_alerts_system
    ports:
      - "8000:8000"  # API Server
      - "8001:8001"  # WebSocket Server
      - "8002:8002"  # Metrics (optional)
    environment:
      - DATABASE_URL=postgresql://alerts:alertspass@db:5432/alerts
      - REDIS_URL=redis://redis:6379
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - WS_HOST=0.0.0.0
      - WS_PORT=8001
      - ENABLE_METRICS=true
      - METRICS_PORT=8002
      - LOG_LEVEL=INFO
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config
    restart: unless-stopped
    networks:
      - alerts_network

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: alerts_postgres
    environment:
      POSTGRES_DB: alerts
      POSTGRES_USER: alerts
      POSTGRES_PASSWORD: alertspass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - alerts_network

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: alerts_redis
    command: redis-server --appendonly yes --requirepass redispass
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - alerts_network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: alerts_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - alerts
    restart: unless-stopped
    networks:
      - alerts_network

  # Prometheus for monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: alerts_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - alerts_network

  # Grafana for dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: alerts_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - alerts_network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  alerts_network:
    driver: bridge

