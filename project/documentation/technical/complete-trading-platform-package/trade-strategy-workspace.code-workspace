{
    "folders": [
        {
            "name": "üéØ Trade Strategy Module",
            "path": "."
        },
        {
            "name": "ü§ñ ZmartBot System",
            "path": "../zmartbot"
        },
        {
            "name": "üêü KingFisher Platform",
            "path": "../kingfisher-platform"
        },
        {
            "name": "üîß Shared Resources",
            "path": "../shared"
        },
        {
            "name": "üìú Management Scripts",
            "path": "../scripts"
        }
    ],
    "settings": {
        "python.defaultInterpreterPath": "./venv/bin/python",
        "python.terminal.activateEnvironment": true,
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.linting.flake8Enabled": true,
        "python.linting.mypyEnabled": true,
        "python.formatting.provider": "black",
        "python.formatting.blackArgs": ["--line-length", "88"],
        "python.sortImports.args": ["--profile", "black"],
        
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.suggest.autoImports": true,
        "typescript.updateImportsOnFileMove.enabled": "always",
        
        "files.associations": {
            "*.env.trade_strategy": "properties",
            "*.sql": "sql",
            "*.md": "markdown"
        },
        
        "files.exclude": {
            "**/__pycache__": true,
            "**/*.pyc": true,
            "**/node_modules": true,
            "**/.pytest_cache": true,
            "**/.mypy_cache": true,
            "**/venv": false,
            "**/.venv": false
        },
        
        "search.exclude": {
            "**/node_modules": true,
            "**/venv": true,
            "**/.venv": true,
            "**/__pycache__": true,
            "**/*.pyc": true
        },
        
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": true,
            "source.fixAll": true
        },
        
        "terminal.integrated.env.osx": {
            "TRADE_STRATEGY_ENV": "development",
            "PYTHONPATH": "${workspaceFolder}/src:${env:PYTHONPATH}"
        },
        
        "sqltools.connections": [
            {
                "name": "Trade Strategy DB",
                "driver": "PostgreSQL",
                "server": "localhost",
                "port": 5432,
                "database": "trading_platform",
                "username": "trade_strategy_app",
                "password": "secure_app_password_2025",
                "connectionTimeout": 30,
                "schema": "trade_strategy"
            },
            {
                "name": "ZmartBot DB",
                "driver": "PostgreSQL",
                "server": "localhost",
                "port": 5432,
                "database": "trading_platform",
                "username": "zmart_user",
                "password": "secure_zmart_password_2025",
                "connectionTimeout": 30,
                "schema": "zmartbot"
            },
            {
                "name": "KingFisher DB",
                "driver": "PostgreSQL",
                "server": "localhost",
                "port": 5432,
                "database": "trading_platform",
                "username": "kf_user",
                "password": "secure_kf_password_2025",
                "connectionTimeout": 30,
                "schema": "kingfisher"
            }
        ],
        
        "rest-client.environmentVariables": {
            "development": {
                "tradeStrategyApi": "http://localhost:8200",
                "zmartbotApi": "http://localhost:8000",
                "kingfisherApi": "http://localhost:8100"
            },
            "production": {
                "tradeStrategyApi": "https://your-domain.com/trade-strategy",
                "zmartbotApi": "https://your-domain.com/zmartbot",
                "kingfisherApi": "https://your-domain.com/kingfisher"
            }
        },
        
        "thunder-client.codeGen": {
            "target": "python-requests",
            "client": "requests"
        }
    },
    "extensions": {
        "recommendations": [
            "ms-python.python",
            "ms-python.vscode-pylance",
            "ms-python.flake8",
            "ms-python.black-formatter",
            "ms-python.isort",
            "ms-toolsai.jupyter",
            "bradlc.vscode-tailwindcss",
            "esbenp.prettier-vscode",
            "ms-vscode.vscode-typescript-next",
            "rangav.vscode-thunder-client",
            "mtxr.sqltools",
            "mtxr.sqltools-driver-pg",
            "ms-vscode.vscode-json",
            "redhat.vscode-yaml",
            "ms-vscode.makefile-tools",
            "ms-vscode.cmake-tools",
            "ms-azuretools.vscode-docker",
            "github.copilot",
            "github.copilot-chat",
            "ms-vscode.live-server",
            "formulahendry.auto-rename-tag",
            "christian-kohler.path-intellisense",
            "visualstudioexptteam.vscodeintellicode",
            "ms-vscode.hexeditor",
            "davidanson.vscode-markdownlint",
            "yzhang.markdown-all-in-one",
            "bierner.markdown-mermaid",
            "shd101wyy.markdown-preview-enhanced"
        ]
    },
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "üöÄ Start All Systems",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/start-all-trade-strategy-mac.sh",
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared",
                    "showReuseMessage": true,
                    "clear": false
                },
                "problemMatcher": [],
                "runOptions": {
                    "runOn": "folderOpen"
                }
            },
            {
                "label": "üéØ Start Trade Strategy Only",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/start-trade-strategy-mac.sh",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "ü§ñ Start ZmartBot Only",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/start-zmartbot-mac.sh",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "üêü Start KingFisher Only",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/start-kingfisher-mac.sh",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "‚õî Stop All Systems",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/stop-all-mac.sh",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "üè• System Health Check",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/health-check-mac.sh",
                "group": "test",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üß™ Run Trade Strategy Tests",
                "type": "shell",
                "command": "python -m pytest tests/ -v --cov=src --cov-report=html",
                "group": "test",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üóÑÔ∏è Initialize Database",
                "type": "shell",
                "command": "python -c \"from src.models.base import Base; from src.core.config import config_manager; Base.metadata.create_all(bind=config_manager.get_database_engine())\"",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üìä Run Database Migrations",
                "type": "shell",
                "command": "alembic upgrade head",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üîÑ Create Database Migration",
                "type": "shell",
                "command": "alembic revision --autogenerate -m \"${input:migrationMessage}\"",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üíæ Create System Backup",
                "type": "shell",
                "command": "${workspaceFolder}/../scripts/backup-all-mac.sh",
                "group": "build",
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üßπ Clean Python Cache",
                "type": "shell",
                "command": "find . -type d -name '__pycache__' -exec rm -rf {} + && find . -name '*.pyc' -delete",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "üì¶ Install Dependencies",
                "type": "shell",
                "command": "pip install -r requirements.txt && pip install -r requirements-dev.txt",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üîç Code Quality Check",
                "type": "shell",
                "command": "flake8 src/ && mypy src/ && black --check src/",
                "group": "test",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üé® Format Code",
                "type": "shell",
                "command": "black src/ && isort src/",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            },
            {
                "label": "üìà Generate Performance Report",
                "type": "shell",
                "command": "python scripts/generate_performance_report.py",
                "group": "test",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": true,
                    "panel": "new"
                },
                "problemMatcher": []
            },
            {
                "label": "üîÑ Restart Trade Strategy Service",
                "type": "shell",
                "command": "pkill -f 'trade_strategy' && sleep 2 && python -m src.main",
                "group": "build",
                "options": {
                    "cwd": "${workspaceFolder}"
                },
                "presentation": {
                    "echo": true,
                    "reveal": "always",
                    "focus": false,
                    "panel": "shared"
                },
                "problemMatcher": []
            }
        ],
        "inputs": [
            {
                "id": "migrationMessage",
                "description": "Enter migration message",
                "default": "Auto-generated migration",
                "type": "promptString"
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "üéØ Debug Trade Strategy API",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/main.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "args": ["--debug"],
                "justMyCode": false,
                "stopOnEntry": false,
                "showReturnValue": true
            },
            {
                "name": "üß™ Debug Tests",
                "type": "python",
                "request": "launch",
                "module": "pytest",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "testing",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "args": [
                    "tests/",
                    "-v",
                    "--tb=short"
                ],
                "justMyCode": false
            },
            {
                "name": "üîÑ Debug Signal Processor",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/services/signal_center.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "justMyCode": false
            },
            {
                "name": "ü§ñ Debug Trading Agent",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/services/trading_agent.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "justMyCode": false
            },
            {
                "name": "üè¶ Debug Vault Manager",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/services/vault_manager.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "justMyCode": false
            },
            {
                "name": "‚öñÔ∏è Debug Position Scaler",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/services/position_scaler.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "justMyCode": false
            },
            {
                "name": "üîß Debug Configuration",
                "type": "python",
                "request": "launch",
                "program": "${workspaceFolder}/src/core/config.py",
                "console": "integratedTerminal",
                "cwd": "${workspaceFolder}",
                "env": {
                    "TRADE_STRATEGY_ENV": "development",
                    "PYTHONPATH": "${workspaceFolder}/src"
                },
                "justMyCode": false
            }
        ]
    },
    "compounds": [
        {
            "name": "üöÄ Debug Full System",
            "configurations": [
                "üéØ Debug Trade Strategy API",
                "ü§ñ Debug Trading Agent",
                "üè¶ Debug Vault Manager"
            ],
            "stopAll": true,
            "preLaunchTask": "üöÄ Start All Systems"
        }
    ]
}

