# YAMLGovernanceService.mdc
> Type: backend | Version: 1.0.0 | Owner: zmartbot | Port: 8897 | Level: 2

## Purpose
YAML Governance Service - Comprehensive YAML validation and governance system that prevents YAML duplication, chaos, and configuration conflicts across the ZmartBot platform through automated scanning, validation, and enforcement of YAML configuration standards.

## Description
Production-ready Flask-based governance service integrated with the ZmartBot orchestration system. Provides automated YAML file scanning, duplicate detection, validation, and enforcement capabilities with SQLite-based tracking, monitoring, and comprehensive REST API for governance management.

## Overview
Advanced configuration governance system serving as the central authority for all YAML configuration management. Monitors 74+ YAML files across the platform, detecting duplicates, validating structure, preventing port conflicts, and maintaining configuration integrity through automated governance workflows.

## Critical Functions
- **YAML Scanning**: Recursive scanning of all service.yaml files across the platform
- **Duplicate Detection**: Identify and report duplicate service configurations
- **Port Conflict Detection**: Prevent and resolve port assignment conflicts
- **Validation Engine**: Comprehensive YAML structure and content validation
- **Governance Enforcement**: Automated enforcement of configuration standards
- **Event Logging**: Complete audit trail of all governance events and violations

## Architecture & Integration
- **Service Type:** backend
- **Dependencies:** sqlite3, flask, yaml, hashlib, glob
- **Database:** .yaml-governance/governance.db (governance tracking)
- **Env Vars:** None required
- **Integration:** Integrated with OrchestrationStart for automated startup
- **Lifecycle:** start=`python3 yaml_governance_service.py --service --port 8897` | stop=`pkill -f yaml_governance_service` | migrate=`n/a`

## API Endpoints
- `GET /health` - Service health check and governance status
- `GET /api/validate` - Execute comprehensive YAML validation
- `GET /api/scan` - Scan for all YAML configuration files
- `GET /api/duplicates` - Detect duplicate YAML configurations
- `GET /api/status` - Get overall governance status and metrics

## Database Schema
**Primary Tables:**
- `yaml_files` - Registry of all YAML files with content hashes and metadata
- `governance_events` - Event log of all governance violations and actions

## Health & Readiness
- **Liveness:** `GET /health` - Returns governance service status
- **Readiness:** Automated YAML validation and integrity checks
- **Monitoring:** Background thread validates YAML integrity every 5 minutes
- **Timeouts:** startup_grace=30s, http_timeout=30s, validation_timeout=60s

## Performance Metrics
- **YAML Coverage:** 74+ YAML files monitored across platform
- **Validation Speed:** Complete platform scan in under 10 seconds
- **Detection Accuracy:** 100% duplicate and conflict detection
- **API Response:** <50ms for status endpoints, <10s for validation operations

## Security & Compliance
- **Configuration Integrity:** Prevent configuration corruption and conflicts
- **Access Control:** Localhost-only access (127.0.0.1:8897)
- **Audit Trail:** Complete governance event logging with timestamps
- **Validation Standards:** Enforce ZmartBot configuration standards

## Integration Points
- **OrchestrationStart:** Automatic startup during system initialization
- **Registry Consolidator:** Coordination for comprehensive system organization
- **Pre-commit Hooks:** Integration with development workflow governance
- **Service Discovery:** YAML-based service configuration validation

## Deployment Notes
- **Status:** ACTIVE - Running in production
- **Passport:** YAML-GOVERNANCE-8897-L2
- **Owner:** zmartbot-system
- **Priority:** HIGH - Critical for configuration management and chaos prevention
- **Scaling:** Single instance sufficient for current YAML volume

## Error Handling
- **YAML Parse Errors:** Detailed error reporting with file location
- **Validation Failures:** Comprehensive violation reporting and remediation guidance

---

