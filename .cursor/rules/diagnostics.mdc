
## Description
Core service component of the ZmartBot ecosystem providing essential functionality.


As an AI, I'm unable to generate the entire MDC file as requested due to the lack of specific information about the service. However, I can provide a template based on the requirements you've provided. You can fill in the details as per your service's specifics.

```markdown
# Masterpiece Documentation Content (MDC) for Diagnostics Service

## 1. Service Overview
- **Name**: Diagnostics
- **Service Classification**: 
- **Criticality Level**: 
- **Business Impact**: 
- **System Role**: 

## 2. Service Architecture
- **Technical Foundation**: 
- **Core Components**: 
- **Data Structures**: 
- **Integration Ecosystem**: 
- **Design Patterns**: 

## 3. Critical Service Characteristics for Master Orchestration

### Service Dependencies
- **Required Python Modules**: 
- **Database Dependencies**: 
- **External Service Dependencies**: 
- **File System Dependencies**: 
- **Network Dependencies**: 
- **Environment Dependencies**: 

### Inter-Service Operation Patterns
- **Provides Services To**: 
- **Depends On Services**: 
- **Communication Protocols**: 
- **Data Exchange Patterns**: 
- **Failure Impact Analysis**: 
- **Cascade Failure Patterns**: 
- **Recovery Coordination**: 

### Service Lifecycle Behavior
- **Startup Time**: 
- **Startup Dependencies**: 
- **Startup Sequence**: 
- **Initialization Checks**: 
- **Shutdown Behavior**: 
- **Shutdown Priority**: 
- **State Persistence**: 
- **Recovery Patterns**: 

### Runtime Characteristics
- **Memory Usage**: 
- **CPU Usage**: 
- **Network Usage**: 
- **Disk I/O**: 
- **Concurrency Model**: 
- **Performance Characteristics**: 
- **Resource Scaling**: 
- **Performance Optimization**: 

### Error Conditions & Recovery
- **Failure Modes**: 
- **Failure Detection**: 
- **Failure Impact**: 
- **Recovery Strategies**: 
- **Circuit Breaker Patterns**: 
- **Fallback Mechanisms**: 
- **Disaster Recovery**: 
- **Health Check Patterns**: 

### Monitoring & Observability
- **Health Check Endpoints**: 
- **Performance Metrics**: 
- **Log Analysis**: 
- **Alert Conditions**: 
- **Diagnostic Procedures**: 
- **Performance Baselines**: 
- **Monitoring Integration**: 

### Master Orchestration Integration Points
- **Service Discovery**: 
- **Health Monitoring**: 
- **Lifecycle Management**: 
- **Resource Coordination**: 
- **Dependency Management**: 
- **Configuration Management**: 
- **Security Coordination**: 

### Critical Decision Patterns for Orchestration
- **Startup Priority**: 
- **Startup Conditions**: 
- **Shutdown Priority**: 
- **Restart Strategy**: 
- **Scaling Strategy**: 
- **Resource Allocation**: 
- **Update Strategy**: 
- **Backup Strategy**: 
- **Security Strategy**: 

## 4. API Endpoints
- **Endpoint Inventory**: 
- **Authentication**: 
- **Authorization**: 
- **Rate Limiting**: 
- **Error Handling**: 
- **Data Validation**: 
- **API Versioning**: 

## 5. Security Features
- **Authentication Mechanisms**: 
- **Authorization Patterns**: 
- **Encryption Standards**: 
- **Security Controls**: 
- **Compliance Requirements**: 
- **Threat Model**: 
- **Security Monitoring**: 

## 6. Development Guidelines
- **Coding Standards**: 
- **Architecture Patterns**: 
- **Testing Requirements**: 
- **Code Quality**: 
- **Documentation Standards**: 
- **Configuration Management**: 
- **Deployment Standards**: 

## 7. Deployment Considerations
- **Infrastructure Requirements**: 
- **Environment Configurations**: 
- **Deployment Patterns**: 
- **Scaling Considerations**: 
- **Monitoring Requirements**: 
- **Disaster Recovery**: 
- **Capacity Planning**: 
```

This template should help you create a comprehensive, detailed, world-class MDC file for your Diagnostics service. Remember, the more detailed and accurate the information, the better the Master Orchestration Agent will be able to manage the service autonomously.

description:
globs:
alwaysApply: true

## Requirements
- ✅ **Database connectivity**
- ✅ **Complete MDC documentation**
- ✅ **Health endpoint implementation**
- ✅ **Master Orchestration integration**


---


## Triggers
- **API endpoint requests**
- **Database events**
- **Health check requests**
