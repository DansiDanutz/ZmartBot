# Market Data Aggregator Service - Complete Master MDC File

## 1. SERVICE OVERVIEW
- **Name**: Enhanced Market Data Aggregator
- **Service Classification**: FOUNDATION (Tier 0)
- **Criticality Level**: CRITICAL
- **Business Impact**: 100% of ecosystem analytics and pattern recognition stops if this fails
- **System Role**: Historical data nervous system & ecosystem pattern repository
- **Database Architecture**: Growing historical repository (vs MySymbols fixed 10 symbols)

## 2. SERVICE ARCHITECTURE
- **Technical Foundation**: FastAPI, Python 3.11+, SQLite, asyncio, aiohttp
- **Core Components**: My Symbols Database Integration, Real-time Binance API Integration, 21 Technical Indicators Engine, Multi-symbol Cache Management, Dynamic Portfolio Synchronization, Enhanced Database Storage Engine, Historical Pattern Repository, Health Monitoring System, Cryptometer Integration (8-hour cycles)
- **Data Structures**: 20+ specialized tables for comprehensive technical analysis, historical symbol archives, pattern recognition data
- **Integration Ecosystem**: CONNECTS TO EVERYTHING - provides historical data foundation for entire ecosystem
- **Design Patterns**: Background task processing, database connection pooling, fallback mechanisms, 8-hour Cryptometer updates

## 3. CRITICAL DATABASE ARCHITECTURE DISTINCTION

### **Enhanced Market Data Aggregator Database** (THIS SERVICE)
- **Architecture Type**: GROWING HISTORICAL REPOSITORY
- **Symbol Management**: Starts with 10 symbols, grows PERMANENTLY with each portfolio change
- **Data Retention**: NEVER deletes historical data - keeps ALL previous symbols forever
- **Current Symbols**: 10+ and growing (11, 12, 13... as symbols are replaced in MySymbols)
- **Purpose**: Historical pattern analysis, ML training data, ecosystem intelligence
- **Value**: Becomes more valuable over time as data accumulates
- **Pattern Analysis**: Rich historical dataset for signal generation and trend analysis
- **Ecosystem Role**: Primary data source for all analysis, alerts, patterns, signals across entire system

### **My Symbols Database** (SEPARATE SERVICE)
- **Architecture Type**: FIXED CURRENT PORTFOLIO
- **Symbol Management**: Always exactly 10 active symbols
- **Data Retention**: Removes old symbols when portfolio changes
- **Current Symbols**: Always exactly 10 (active trading portfolio)
- **Purpose**: Current trading decisions and real-time portfolio management
- **Value**: Real-time accuracy for current positions
- **Trading Role**: Current position management and active symbol tracking

### **Critical Integration Pattern**
```
MySymbols DB (10 symbols) → Informs → Market Data Aggregator (10+ growing symbols)
                                   ↓
                            Historical Repository → Feeds → Entire Ecosystem
                                   ↓
                    [Patterns, Signals, Alerts, ML Training, Analytics]
```

## 4. REAL-TIME DATA COLLECTION & 21 TECHNICAL INDICATORS

### **Binance API Integration**
- **Real Market Data**: Live price, volume, bid/ask, 24h change, high/low
- **Update Frequency**: Every 30 seconds for all symbols
- **API Endpoints**: Binance 24hr ticker statistics
- **Data Quality**: Production-grade real market data (no mock/simulated data)
- **Fallback Strategy**: Cached data serving during API downtime

### **21 Technical Indicators Engine**
#### **Momentum Indicators**
- RSI (Relative Strength Index)
- Stochastic Oscillator
- Williams %R
- ROC (Rate of Change)
- MFI (Money Flow Index)
- Ultimate Oscillator

#### **Trend Indicators**
- MACD (Moving Average Convergence Divergence)
- EMA (Exponential Moving Average)
- SMA (Simple Moving Average)
- ADX (Average Directional Index)
- DMI (Directional Movement Index)
- Parabolic SAR
- Aroon
- TRIX

#### **Volatility Indicators**
- Bollinger Bands
- ATR (Average True Range)
- Keltner Channel

#### **Volume Indicators**
- OBV (On-Balance Volume)
- VWAP (Volume-Weighted Average Price)

#### **Other Indicators**
- CCI (Commodity Channel Index)
- Momentum Indicator

### **Indicator Calculation Process**
- **Real-Time Calculation**: All 21 indicators calculated every 30 seconds
- **Historical Data Requirements**: Maintains sufficient price history for accurate calculations
- **Timeframe Support**: Multiple timeframes (15m, 1h, 4h, 1d) planned
- **Storage**: All calculated values stored in specialized database tables
- **Performance**: Optimized calculation algorithms for real-time processing

## 5. CRYPTOMETER INTEGRATION (ADVANCED)

### **Professional Market Analysis**
- **Update Frequency**: Every 8 hours (00:00, 08:00, 16:00 UTC)
- **Analysis Depth**: Professional-grade market insights and signals
- **Data Integration**: Combines with Binance data for comprehensive analysis
- **Storage**: Dedicated cryptometer_analysis table with professional insights
- **Service Variant**: Available in advanced Market Data Aggregator version (port 8157)

### **Service Variants**
#### **Basic Version** (market_data_aggregator_final.py)
- **Port**: 8156 (CURRENTLY RUNNING)
- **Features**: Real-time Binance API + 21 technical indicators
- **Database**: 7 specialized tables in market_data_enhanced.db
- **Status**: ✅ OPERATIONAL - Collecting real BTC and portfolio data
- **Performance**: 30-second collection cycles, 155+ market records, 460+ indicator calculations

#### **Advanced Version** (market_data_aggregator_with_cryptometer.py)
- **Port**: 8157 (READY, not deployed)
- **Features**: Binance + Cryptometer + Growing repository + AI analysis
- **Database**: 25+ specialized tables in market_data_enhanced_advanced.db
- **Status**: DEPLOYMENT READY - Enhanced intelligence capabilities
- **Enhanced Features**: 8-hour professional analysis cycles, advanced pattern recognition

## 6. CRITICAL SERVICE CHARACTERISTICS FOR MASTER ORCHESTRATION

### **Service Dependencies**
- **Required Python Modules**: fastapi, uvicorn, asyncio, aiohttp, sqlite3, pathlib, datetime, json, typing, requests, numpy, pandas, talib
- **Database Dependencies**: PRIMARY: market_data_enhanced.db, SECONDARY: my_symbols_v2.db
- **External Service Dependencies**: My Symbols Service, Binance API, Cryptometer API (optional)
- **File System Dependencies**: /Users/dansidanutz/Desktop/ZmartBot/zmart-api/data/ directory
- **Network Dependencies**: Port 8156 (basic) / 8157 (advanced)

### **Inter-Service Operation Patterns**
- **PROVIDES SERVICES TO**: Live Alerts System, Dashboard Frontend, Analytics Services, Signal Generation, Pattern Recognition, ML Training Systems, Historical Analysis
- **DEPENDS ON SERVICES**: My Symbols Service, API Keys Manager, Master Orchestration Agent
- **Communication Protocols**: HTTP REST API, Direct SQLite database queries, In-memory caching, Background asyncio tasks
- **Data Exchange Patterns**: INBOUND: Portfolio changes from MySymbols, OUTBOUND: Real-time indicators to ecosystem, STORAGE: Historical data repository, CACHING: Symbol data and calculations

### **Failure Impact Analysis**
- **CRITICAL FAILURE IMPACT**: Complete trading system shutdown, all indicators stop, live alerts stop, dashboard data stops
- **CASCADE FAILURES**: 21-indicator system stops, alerts stop, signals stop, pattern recognition stops, ML training stops
- **RECOVERY COORDINATION**: All dependent services need restart coordination after recovery
- **BUSINESS IMPACT**: 100% trading intelligence halt, complete ecosystem data failure

## 7. SERVICE LIFECYCLE BEHAVIOR

### **Startup Sequence**
- **Startup Time**: 3-5 seconds
- **Startup Dependencies**: My Symbols Service, API Keys Manager, Database connectivity, Port availability
- **Initialization Process**: Database initialization, My Symbols sync, Initial symbol cache, Port registration, Background tasks startup, Health endpoint activation
- **Startup Priority**: 3/10 (Start after core services, before frontend)
- **Dependency Validation**: Database accessibility, API credentials, My Symbols connectivity, Port availability

### **Runtime Characteristics**
- **Memory Usage**: Baseline: 100MB, Typical: 200MB, Peak: 400MB, Scaling: +10MB per additional symbol
- **CPU Usage**: Baseline: 5-10%, Typical: 15-25%, Peak: 50% (during indicator calculations)
- **Network Usage**: 2-5 Mbps burst every 30 seconds for data collection
- **Disk I/O**: Write patterns: 200+ records every 30 seconds, Read patterns: Continuous for calculations
- **Concurrency Model**: asyncio event loop, multiple background tasks, concurrent indicator calculations

### **Shutdown Behavior**
- **Shutdown Priority**: 8/10 (Late shutdown to allow dependent services to complete)
- **Graceful Shutdown**: Background task termination, database connection cleanup, data persistence
- **State Persistence**: All collected data and calculations survive restarts
- **Recovery Patterns**: Auto-reconnect, cache rebuilding, data continuity verification

## 8. DATABASE ARCHITECTURE (7 SPECIALIZED TABLES)

### **Primary Tables**
1. **market_data**: Core price/volume data from Binance
2. **technical_indicators**: All 21 calculated indicators
3. **symbol_metadata**: Symbol information and trading pairs
4. **collection_status**: Data collection tracking and health

### **Historical Tables**
5. **historical_prices**: Long-term price history archive
6. **indicator_history**: Historical indicator values
7. **portfolio_changes**: Symbol addition/removal tracking

### **Advanced Tables (Cryptometer Version)**
8. **cryptometer_analysis**: Professional market analysis
9. **pattern_recognition**: Identified market patterns
10. **ml_features**: Machine learning training data

## 9. MONITORING & HEALTH CHECKS

### **Health Check Endpoints**
- **GET /health**: Basic service health
- **GET /status**: Detailed service status
- **GET /data/{symbol}**: Symbol-specific data
- **GET /indicators/{symbol}**: Technical indicators
- **GET /collection-status**: Data collection health

### **Performance Metrics**
- **Data Collection Success Rate**: 99%+ target
- **API Response Time**: <100ms target
- **Database Query Time**: <50ms target
- **Indicator Calculation Time**: <200ms for all 21 indicators
- **Cache Hit Rate**: 90%+ target

### **Alert Conditions**
- Data collection failures (>5% failure rate)
- API response time degradation (>500ms)
- Database connectivity issues
- Memory usage exceeding 80% of allocation
- Indicator calculation failures

## 10. MASTER ORCHESTRATION INTEGRATION

### **Service Discovery & Registration**
- **Port Registry**: Automatic registration with orchestration
- **Health Monitoring**: Continuous health reporting to orchestration
- **Dependency Declaration**: Clear dependency mapping for startup sequencing
- **Resource Reporting**: Memory, CPU, disk usage reporting

### **Orchestration Intelligence**
- **Startup Coordination**: Waits for My Symbols Service and API Keys Manager
- **Failure Impact**: Critical service - affects entire ecosystem
- **Recovery Strategy**: Immediate restart with data integrity verification
- **Scaling Triggers**: Memory >80%, Response time >500ms, Collection failures >5%

### **Critical Orchestration Rules**
1. **NEVER** start before My Symbols Service (dependency requirement)
2. **ALWAYS** verify database connectivity before declaring healthy
3. **ALWAYS** preserve historical data during restarts/updates
4. **NEVER** delete market_data_enhanced.db (contains historical intelligence)
5. **ALWAYS** coordinate with orchestration before shutdown
6. **ALWAYS** report resource usage for scaling decisions

## 11. DEPLOYMENT CONFIGURATIONS

### **Service Variants Deployment**
- **Development/Resource Constrained**: Use basic version (port 8156)
- **Production/Full Intelligence**: Use advanced version (port 8157)
- **Port Conflict Resolution**: Advanced automatically uses alternate port
- **Database Path**: /Users/dansidanutz/Desktop/ZmartBot/zmart-api/data/

### **Environment Requirements**
- **Python**: 3.11+ with asyncio, aiohttp, fastapi, numpy, pandas, talib
- **Database**: SQLite 3.31+
- **Memory**: 512MB minimum, 1GB recommended
- **Disk Space**: 1GB for historical data growth
- **Network**: Stable internet for Binance API access

## 12. SECURITY & ACCESS CONTROL

### **Data Protection**
- **Database Security**: File system permissions, local access only
- **API Security**: Internal service endpoints only, no external exposure
- **Credential Management**: Integrated with API Keys Manager
- **Data Validation**: Input validation, SQL injection protection

### **Network Security**
- **Internal Only**: All endpoints restricted to localhost
- **Port Security**: Standard port allocation through orchestration
- **External APIs**: Secured through API Keys Manager

## 13. PERFORMANCE & OPTIMIZATION

### **Real-Time Performance**
- **Collection Latency**: <1 second for all 10 symbols
- **Indicator Calculation**: <200ms for complete set
- **Database Operations**: <50ms per query
- **Memory Management**: Efficient caching, garbage collection optimized

### **Scaling Characteristics**
- **Linear Scaling**: Performance scales linearly with symbol count
- **Resource Allocation**: Dynamic based on portfolio size
- **Database Growth**: Predictable growth patterns, archiving strategies
- **Optimization**: Continuous performance monitoring and optimization

## 14. BUSINESS INTELLIGENCE & ECOSYSTEM VALUE

### **Ecosystem Integration Value**
- **Historical Intelligence**: Growing repository becomes more valuable over time
- **Pattern Recognition**: Rich dataset enables advanced pattern analysis
- **ML Training Data**: High-quality labeled data for machine learning
- **Signal Generation**: Foundation for all trading signals and alerts
- **Risk Analysis**: Historical data enables sophisticated risk modeling

### **Competitive Advantages**
- **Real-Time + Historical**: Combines live data with historical intelligence
- **Comprehensive Indicators**: All 21 major technical indicators
- **Growing Repository**: Unique historical dataset grows with every portfolio change
- **Professional Integration**: Cryptometer integration for institutional-grade analysis
- **Ecosystem Foundation**: Core intelligence service for entire trading platform

This Market Data Aggregator Service is the foundational intelligence layer of the entire ZmartBot ecosystem, providing real-time market data combined with comprehensive technical analysis and growing historical intelligence that becomes more valuable over time.