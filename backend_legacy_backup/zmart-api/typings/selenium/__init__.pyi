# Type stubs for selenium (for development environment compatibility)
# This file provides type hints when selenium is not installed

from typing import Any, Optional, Union, List, Dict
from typing_extensions import Literal

class WebDriver:
    def get(self, url: str) -> None: ...
    def quit(self) -> None: ...
    def close(self) -> None: ...
    def find_element(self, by: str, value: str) -> Any: ...
    def find_elements(self, by: str, value: str) -> List[Any]: ...
    @property
    def title(self) -> str: ...
    def execute_script(self, script: str) -> Any: ...

class Chrome(WebDriver):
    def __init__(self, options: Optional[Any] = None, service: Optional[Any] = None) -> None: ...

class Options:
    def add_argument(self, argument: str) -> None: ...
    def add_experimental_option(self, name: str, value: Any) -> None: ...

class Service:
    def __init__(self, executable_path: Optional[str] = None) -> None: ...

class By:
    ID: Literal["id"]
    NAME: Literal["name"]
    CLASS_NAME: Literal["class name"]
    TAG_NAME: Literal["tag name"]
    CSS_SELECTOR: Literal["css selector"]
    XPATH: Literal["xpath"]

class WebDriverWait:
    def __init__(self, driver: WebDriver, timeout: float) -> None: ...
    def until(self, method: Any) -> Any: ...

class EC:
    @staticmethod
    def presence_of_element_located(locator: tuple) -> Any: ...
    @staticmethod
    def element_to_be_clickable(locator: tuple) -> Any: ...

class TimeoutException(Exception): ...
class NoSuchElementException(Exception): ...
class WebDriverException(Exception): ...

# Module-level exports
webdriver: Any
common: Any